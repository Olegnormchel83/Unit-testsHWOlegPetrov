1)  Почему использование тестовых заглушек может быть полезным при написании модульных тестов?
        Заглушки позволяют изолировать тестируемые модули от получения некорректных результатов из-за случайного внешнего воздействия.
        Как пример можно привести тестирование методов погодного приложения, которое взаимодействует с метеосервисом, откуда получает данные о погоде.

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что метод был вызван с определенными аргументами?
    Шпионы или моки.
        Шпионы умеют записывать информацию о вызовах метода, включая переданные аргументы.
        Моки же могут предопределить ожидаемые вызовы методов и возвращаемые значения. При использовании мока
    можно задать ожидаемые аргументы и проверить, что метод был вызван с заданными аргументами.

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?
    Stubs или fake.
        Stubs заглушки задают определенное возвращаемое значение для вызова методов.
        Fake заглушки используются, когда нужно создать упрощенную версию существующего объекта или интерфейса. Фейки могут предоставлять
    фиксированные данные, с помощью которых можно тестировать функциональность, зависимую от внешних ресурсов.

4) Какой тип тестовой заглушки вы бы использовали для имитации взаимодействия с внешним API или базой данных?
    Fake.
        Фейки могут воссоздать поведение внешних зависимостей и предоставлять фиксированные данные для тестирования модуля, который
    использует эти зависимости.